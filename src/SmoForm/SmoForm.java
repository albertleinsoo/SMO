package SmoForm;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class SmoForm extends JFrame {
    private JPanel rootPanel;
    private JTable sourcesTable;
    private JButton nextStepBtn;
    private JButton endModelingBtn;
    private JTable bufferTable;
    private JTable devicesTable;
    private JLabel curTimeActLbl;

    public SmoForm(String title) {
        super(title);
        this.createTables();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setContentPane(rootPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        
        nextStepBtn.setActionCommand("Next step");
        endModelingBtn.setActionCommand("Finish modeling");

        ActionListener buttonActionListener = new SmoFormButtonsListener();
        nextStepBtn.addActionListener(buttonActionListener);
        endModelingBtn.addActionListener(buttonActionListener);

        this.setVisible(true);
    }

    public JPanel getRootPanel() {
        return rootPanel;
    }

    public void createTables() { //todo тестовая таблица
        Object data[][] = {
                {"S0", "-", "-", "-", "-", "-"},
                {"S1", "-", "-", "-", "-", "-"}
        };
        sourcesTable.setModel(new DefaultTableModel(
                data,
                new String[]{"Source", "NextTime", "Status", "Created", "Processed", "Rejected"}
        ));
        Object data2[][] = {
                {"D0", "-", "-", "-", "-", "-"},
                {"D1", "-", "-", "-", "-", "-"}
        };

        devicesTable.setModel(new DefaultTableModel(
                data2,
                new String[]{"Buffer", "NextTime", "Status", "Created", "Processed", "Rejected", "Total in buffer", "Total in Device", "Total in Model"}
        ));
        Object data3[][] = {
                {"B0", "-", "-", "-", "-", "-", "-", "-", "-"},
                {"B1", "-", "-", "-", "-", "-"},
                {"B2", "-", "-", "-", "-", "-"}
        };
        bufferTable.setModel(new DefaultTableModel(
                data3,
                new String[]{"Buffer", "NextTime", "Status", "Created", "Processed", "Rejected"}
        ));
    }

    /*передаются модели, которые задаются в таблицы*/
    public void updateTables(String curTimeAndActStr, DefaultTableModel dataSrc, DefaultTableModel dataDevice, DefaultTableModel dataBuf) {
        curTimeActLbl.setText(curTimeAndActStr);
        sourcesTable.setModel(dataSrc);
        devicesTable.setModel(dataDevice);
        bufferTable.setModel(dataBuf);
        //todo возможно переместить отображение в другое место
        setVisible(true);

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        endModelingBtn = new JButton();
        endModelingBtn.setText("To end");
        rootPanel.add(endModelingBtn, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        rootPanel.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        sourcesTable = new JTable();
        sourcesTable.setEnabled(false);
        sourcesTable.setPreferredScrollableViewportSize(new Dimension(450, 100));
        scrollPane1.setViewportView(sourcesTable);
        nextStepBtn = new JButton();
        nextStepBtn.setText("Next Step");
        rootPanel.add(nextStepBtn, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane2 = new JScrollPane();
        rootPanel.add(scrollPane2, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        devicesTable = new JTable();
        devicesTable.setPreferredScrollableViewportSize(new Dimension(450, 100));
        scrollPane2.setViewportView(devicesTable);
        final JScrollPane scrollPane3 = new JScrollPane();
        rootPanel.add(scrollPane3, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        bufferTable = new JTable();
        bufferTable.setPreferredScrollableViewportSize(new Dimension(450, 100));
        scrollPane3.setViewportView(bufferTable);
        curTimeActLbl = new JLabel();
        curTimeActLbl.setText("Current time and action");
        rootPanel.add(curTimeActLbl, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
